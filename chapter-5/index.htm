<!DOCTYPE HTML>
<html>
<head>
<meta charset="UTF-8">
<title>calculating element dimensions</title>
<link rel="stylesheet" type="text/css" href="style.css">

</head>
<body>
<article>
<h1>How browsers calculate unit values</h1>
<section class="em">
<h2>Using ems</h2>
<p>If ems are used in the font-size property, their value is calculated as a multiple of the parent element's font size. This eventually leads back to the device's default font size, set by either the device or the user.</p>
<p>This can make it very difficult to accurately predict what the calculated value will be for multiply nested elements. While this is generally not a problem regarding fonts (after all, the goal is to make elements relative to each other, not to know exactly what their calculated size will be), it can make it difficult to know which value to set for box model properties if you're approximating values based on default document font size.</p>
<p>If, on the other hand, ems are used for any other property, their value is calculated as a multiple of that element's font size, NOT the parent.</p>
</section>
<section class="percentages">
<h2>Using percentages</h2>
<p>For the most part, percentages are pretty straightforward. Values are calculated based on the overall value of the parent element. For example, if you gave a block-level element a width of 100%, it would stretch as wide as possible, and only be restricted by the parent element.</p>
<p>For nested elements, you need to remember that a percentage is calculated relative to the parent, no matter how deep the element is. This can actually be very tricky in complicated layouts, as it is sometimes difficult to remember exactly which element the percentage is based on.</p>
<p>It's even more difficult when you mix percentages and other values. For example, if you set an element's width to 80% and set 20px worth of padding you need to remember that those values are cumulative. The total width of the element would be 80% of its parent, plus the 40px worth of horizontal padding.</p>
</section>
<footer>
<p>One day soon, we'll be able to use root ems ("rem"). Root ems will allow you to set a value that is calculated based on the document's default font size, not the parent elements. This will give you additional flexibility when using ems within layout values, and make it easier to create em-based layouts.
</p>
</footer>
</article>
</body>
</html>
